{"ast":null,"code":"var _jsxFileName = \"/home/srdjan/Insync/srdjan.coric1984@gmail.com/Google Drive/Bins/request-bin/front-end/src/components/Bin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport bins from '../services/bins';\nimport Request from './Request';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport socketIOClient from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"/\";\n\nconst Bin = ({\n  slug\n}) => {\n  _s();\n\n  const [tub, setTub] = useState(null);\n  const history = useHistory();\n  const requestURL = `/${slug}`;\n  useEffect(() => {\n    const socket = socketIOClient(ENDPOINT);\n    socket.emit(\"NewClient\", slug);\n    socket.on('UpdateTub', ({\n      requests\n    }) => {\n      setTub(requests);\n    });\n    return () => socket.disconnect();\n  }, [slug]);\n  useEffect(() => {\n    bins.get(slug).then(result => {\n      if (result) {\n        let requests = result.requests;\n        setTub(requests);\n      } else {\n        // TODO: render 404 page instead\n        history.push('/');\n      }\n    });\n  }, [history, slug]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mt-8 text-center text-2xl\",\n      children: \"Tub API URL:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mt-2 text-center text-2xl mb-1.5\",\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        id: \"requestURL\",\n        className: \"bg-gray-300 border-2 border-gray-400 hover:bg-gray-400 hover:border-gray-500 p-2 rounded\",\n        children: requestURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 56\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n      text: requestURL,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"block mt-4 mx-auto bg-purple-500 hover:bg-purple-700 text-white font-bold py-2 px-4 border border-purple-700 rounded\",\n        children: \"Copy URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center\",\n      children: tub && tub.map(request => /*#__PURE__*/_jsxDEV(Request, {\n        data: JSON.stringify(request)\n      }, request.timestamp, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Bin, \"ZuoAFjcv+1MrpCsPZZKu3uLvH5g=\", false, function () {\n  return [useHistory];\n});\n\n_c = Bin;\nexport default Bin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bin\");","map":{"version":3,"sources":["/home/srdjan/Insync/srdjan.coric1984@gmail.com/Google Drive/Bins/request-bin/front-end/src/components/Bin.js"],"names":["React","useEffect","useState","useHistory","bins","Request","CopyToClipboard","socketIOClient","ENDPOINT","Bin","slug","tub","setTub","history","requestURL","socket","emit","on","requests","disconnect","get","then","result","push","map","request","JSON","stringify","timestamp"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AACA,MAAMC,QAAQ,GAAG,GAAjB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AACxB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,IAAD,CAA9B;AAEA,QAAMW,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAMW,UAAU,GAAI,IAAGJ,IAAK,EAA5B;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,MAAM,GAAGR,cAAc,CAACC,QAAD,CAA7B;AACAO,IAAAA,MAAM,CAACC,IAAP,CAAY,WAAZ,EAAyBN,IAAzB;AACAK,IAAAA,MAAM,CAACE,EAAP,CAAU,WAAV,EAAuB,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAkB;AACvCN,MAAAA,MAAM,CAACM,QAAD,CAAN;AACD,KAFD;AAGA,WAAO,MAAMH,MAAM,CAACI,UAAP,EAAb;AACD,GAPQ,EAON,CAACT,IAAD,CAPM,CAAT;AASAT,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,IAAI,CAACgB,GAAL,CAASV,IAAT,EAAeW,IAAf,CAAoBC,MAAM,IAAI;AAC5B,UAAIA,MAAJ,EAAY;AACV,YAAIJ,QAAQ,GAAGI,MAAM,CAACJ,QAAtB;AACAN,QAAAA,MAAM,CAACM,QAAD,CAAN;AACD,OAHD,MAGO;AACL;AACAL,QAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACD;AACF,KARD;AASD,GAVQ,EAUN,CAACV,OAAD,EAAUH,IAAV,CAVM,CAAT;AAYA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,kCAAd;AAAA,6BAAiD;AAAM,QAAA,EAAE,EAAC,YAAT;AAAsB,QAAA,SAAS,EAAC,0FAAhC;AAAA,kBAA4HI;AAA5H;AAAA;AAAA;AAAA;AAAA;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAEA,UAAvB;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,sHAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAME;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,gBACGH,GAAG,IACFA,GAAG,CAACa,GAAJ,CAAQC,OAAO,iBACb,QAAC,OAAD;AAAiC,QAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,OAAf;AAAvC,SAAcA,OAAO,CAACG,SAAtB;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA3CD;;GAAMnB,G;UAGYN,U;;;KAHZM,G;AA6CN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport bins from '../services/bins'\nimport Request from './Request'\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"/\"\n\nconst Bin = ({ slug }) => {\n  const [tub, setTub] = useState(null)\n\n  const history = useHistory()\n  const requestURL = `/${slug}`\n\n  useEffect(() => {\n    const socket = socketIOClient(ENDPOINT);\n    socket.emit(\"NewClient\", slug);\n    socket.on('UpdateTub', ({ requests }) => {\n      setTub(requests)\n    })\n    return () => socket.disconnect();\n  }, [slug]);\n\n  useEffect(() => {\n    bins.get(slug).then(result => {\n      if (result) {\n        let requests = result.requests;\n        setTub(requests)\n      } else {\n        // TODO: render 404 page instead\n        history.push('/')\n      }\n    })\n  }, [history, slug])\n\n  return (\n    <main>\n      <h3 className=\"mt-8 text-center text-2xl\">Tub API URL:</h3>\n      <h4 className=\"mt-2 text-center text-2xl mb-1.5\"><code id=\"requestURL\" className=\"bg-gray-300 border-2 border-gray-400 hover:bg-gray-400 hover:border-gray-500 p-2 rounded\">{requestURL}</code></h4>\n      <CopyToClipboard text={requestURL}>\n        <button className=\"block mt-4 mx-auto bg-purple-500 hover:bg-purple-700 text-white font-bold py-2 px-4 border border-purple-700 rounded\">Copy URL</button>\n      </CopyToClipboard>\n      <div className=\"flex flex-col items-center\">\n        {tub &&\n          tub.map(request =>\n            <Request key={request.timestamp} data={JSON.stringify(request)} />\n          )\n        }\n      </div>\n    </main>\n  )\n}\n\nexport default Bin;\n\n"]},"metadata":{},"sourceType":"module"}